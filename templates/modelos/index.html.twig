{% extends 'base.html.twig' %}

{% block title %}Gestión de Modelos{% endblock %}

{% block body %}
<div class="page-header"><h3 class="fw-bold mb-3">Gestión de Modelos</h3></div>

<div class="row">
    <div class="col-md-12">
        <div class="card">
            <div class="card-header">
                <div class="d-flex align-items-center">
                    <h4 class="card-title">Listado de Modelos</h4>
                    <button id="btn-nuevo-modelo" class="btn btn-primary btn-round ms-auto">
                        <i class="fa fa-plus"></i> Agregar Modelo
                    </button>
                </div>
            </div>
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table table-hover" id="tabla-modelos">
                        <thead>
                            <tr>
                                <th>Id</th>
                                <th>Nombre del Modelo</th>
                                <th>Marca</th>
                                <th class="text-end">Acciones</th>
                            </tr>
                        </thead>
                        <tbody>
                        {% for modelo in modelos %}
                            <tr data-id="{{ modelo.id }}">
                                <td>{{ modelo.id }}</td>
                                <td class="modelo-name">{{ modelo.name }}</td>
                                <td class="marca-name">{{ modelo.marca.name }}</td>
                                <td class="text-end">
                                    <button class="btn btn-warning btn-sm btn-editar">Editar</button>
                                </td>
                            </tr>
                        {% else %}
                            <tr id="fila-sin-modelos"><td colspan="4" class="text-center">No se encontraron modelos</td></tr>
                        {% endfor %}
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="formModal" tabindex="-1" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="formModalLabel">Nuevo Modelo</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body" id="modal-body-content"></div>
    </div>
  </div>
</div>

 <div class="modal fade" id="nestedFormModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
    <div class="modal-content">
        <div class="modal-header">
        <h5 class="modal-title" id="nestedFormModalLabel">Nueva Marca</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body" id="nested-modal-body-content"></div>
    </div>
    </div>
</div>

{% endblock %}

{% block javascripts %}
    {{ parent() }}

    <script>
    document.addEventListener('DOMContentLoaded', function() {
        // MODAL PRINCIPAL (Modelos)
        const mainModalEl = document.getElementById('formModal');
        const formModal = new bootstrap.Modal(mainModalEl);
        const modalBody = document.getElementById('modal-body-content');
        const modalTitle = document.getElementById('formModalLabel');
        const tablaBody = document.querySelector('#tabla-modelos tbody');

        // MODAL ANIDADO (Marcas)
        const nestedModalEl = document.getElementById('nestedFormModal');
        const nestedFormModal = new bootstrap.Modal(nestedModalEl);
        const nestedModalBody = document.getElementById('nested-modal-body-content');
        const nestedModalTitle = document.getElementById('nestedFormModalLabel');

        // Lógica para atenuar
        nestedModalEl.addEventListener('show.bs.modal', () => mainModalEl.classList.add('modal-underlay'));
        nestedModalEl.addEventListener('hidden.bs.modal', () => mainModalEl.classList.remove('modal-underlay'));

        function initializeSelect2(selector = '#formModal .form-select') {
            $(selector).select2({
                dropdownParent: $(selector).closest('.modal')
            });
        }

        // --- ABRIR MODAL PRINCIPAL (NUEVO MODELO) ---
        const newModelButton = document.getElementById('btn-nuevo-modelo');
        if (newModelButton) {
            newModelButton.addEventListener('click', function() {
                modalTitle.textContent = 'Nuevo Modelo';
                fetch('{{ path('app_modelos_new') }}')
                    .then(r => r.text()).then(html => {
                        modalBody.innerHTML = html;
                        initializeSelect2();
                        formModal.show();
                        attachFormSubmitListener();
                    });
            });
        }

        // --- ABRIR MODAL PRINCIPAL (EDITAR MODELO) ---
        tablaBody.addEventListener('click', function(e) {
            if (e.target.classList.contains('btn-editar')) {
                const row = e.target.closest('tr');
                const modeloId = row.dataset.id;
                modalTitle.textContent = `Editar Modelo #${modeloId}`;
                const url = `{{ path('app_modelos_edit', {'id': 'ID_PLACEHOLDER'}) }}`.replace('ID_PLACEHOLDER', modeloId);
                fetch(url).then(r => r.text()).then(html => {
                    modalBody.innerHTML = html;
                    initializeSelect2();
                    formModal.show();
                    attachFormSubmitListener();
                });
            }
        });

        // --- ABRIR MODAL ANIDADO (NUEVA MARCA) ---
        modalBody.addEventListener('click', function(e) {
            if (e.target.closest('#btn-add-nested-marca')) {
                nestedModalTitle.textContent = 'Nueva Marca';
                fetch('{{ path('app_marca_new') }}')
                    .then(r => r.text()).then(html => {
                        nestedModalBody.innerHTML = html;
                        nestedFormModal.show();
                        attachNestedFormSubmitListener();
                    });
            }
        });

        // --- SUBMIT DEL FORMULARIO PRINCIPAL (MODELOS) ---
        function attachFormSubmitListener() {
            const form = document.getElementById('formModelo');
            if (!form) return;
            form.addEventListener('submit', function(e) {
                e.preventDefault();
                const btn = form.querySelector('button[type="submit"]');
                const spinner = btn.querySelector('.spinner-border');
                spinner.classList.remove('d-none');
                btn.disabled = true;
                form.querySelectorAll('.form-error-message').forEach(el => el.innerHTML = '');

                fetch(form.action, { method: 'POST', body: new FormData(form), headers: {'X-Requested-With': 'XMLHttpRequest'} })
                .then(response => { if (!response.ok) { return response.json().then(err => Promise.reject(err)); } return response.json(); })
                .then(data => {
                    if (data.status === 'success') {
                        $.notify({icon: 'fas fa-check-circle', title: '¡Éxito!', message: data.message},{type: 'success'});
                        if (form.action.includes('/edit')) {
                            updateTableRow(data.modelo);
                        } else {
                            addTableRow(data.modelo);
                        }
                        formModal.hide();
                    }
                })
                .catch(errorData => {
                    if (errorData.errors) {
                        Object.keys(errorData.errors).forEach(fieldName => {
                            const container = form.querySelector(`[data-field-error="${fieldName}"]`);
                            if (container) { container.innerHTML = `<p class="mb-0">${errorData.errors[fieldName].join(', ')}</p>`; }
                        });
                        $.notify({icon: 'fas fa-exclamation-triangle', title: 'Error de Validación', message: errorData.message},{type: 'danger'});
                    } else {
                        $.notify({icon: 'fas fa-exclamation-triangle', title: 'Error', message: errorData.message || 'Ocurrió un error.'},{type: 'danger'});
                    }
                })
                .finally(() => { spinner.classList.add('d-none'); btn.disabled = false; });
            });
        }
        
        // --- SUBMIT DEL FORMULARIO ANIDADO (MARCAS) ---
        function attachNestedFormSubmitListener() {
            const nestedForm = document.getElementById('formMarca');
            if (!nestedForm) return;
            nestedForm.addEventListener('submit', function(e) {
                e.preventDefault();
                const btn = nestedForm.querySelector('button[type="submit"]');
                const spinner = btn.querySelector('.spinner-border');
                spinner.classList.remove('d-none');
                btn.disabled = true;
                nestedForm.querySelectorAll('.form-error-message').forEach(el => el.innerHTML = '');

                fetch(nestedForm.action, { method: 'POST', body: new FormData(nestedForm), headers: {'X-Requested-with': 'XMLHttpRequest'} })
                .then(response => {
                    if (!response.ok) { return response.json().then(err => Promise.reject(err)); }
                    return response.json();
                })
                .then(data => {
                    if (data.status === 'success') {
                        const newBrand = data.marca;
                        const newOption = new Option(newBrand.displayText, newBrand.id, true, true);
                        $('#formModelo select[name="modelos[marca]"]').append(newOption).trigger('change');
                        nestedFormModal.hide();
                        $.notify({icon: 'fas fa-check-circle', title: '¡Éxito!', message: data.message},{type: 'success'});
                    }
                })
                .catch(errorData => {
                    if (errorData.errors) {
                         Object.keys(errorData.errors).forEach(fieldName => {
                            const container = nestedForm.querySelector(`[data-field-error="${fieldName}"]`);
                            if (container) { container.innerHTML = `<p class="mb-0">${errorData.errors[fieldName].join(', ')}</p>`; }
                        });
                        $.notify({icon: 'fas fa-exclamation-triangle', title: 'Error de Validación', message: errorData.message},{type: 'danger'});
                    } else {
                        $.notify({icon: 'fas fa-exclamation-triangle', title: 'Error', message: errorData.message || 'Ocurrió un error.'},{type: 'danger'});
                    }
                })
                .finally(() => { spinner.classList.add('d-none'); btn.disabled = false; });
            });
        }

        function updateTableRow(modelo) {
            const row = tablaBody.querySelector(`tr[data-id="${modelo.id}"]`);
            if (row) {
                row.querySelector('.modelo-name').textContent = modelo.name;
                row.querySelector('.marca-name').textContent = modelo.marca.name;
            }
        }

        function addTableRow(modelo) {
            document.getElementById('fila-sin-modelos')?.remove();
            const newRowHtml = `
                <tr data-id="${modelo.id}">
                    <td>${modelo.id}</td>
                    <td class="modelo-name">${modelo.name}</td>
                    <td class="marca-name">${modelo.marca.name}</td>
                    <td class="text-end"><button class="btn btn-warning btn-sm btn-editar">Editar</button></td>
                </tr>`;
            tablaBody.insertAdjacentHTML('beforeend', newRowHtml);
        }
    });
    </script>
{% endblock %}